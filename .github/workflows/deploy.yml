name: Deploy to production

on:
  pull_request:
  push:
    branches: [main]

jobs:
  deploy:
    name: Build image
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v2

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'v1.25.3'
        id: install

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-southeast-1

      - name: Login to Amazon ECR Private
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push docker image to Amazon ECR
        env:
          REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -f docker/frontend.Dockerfile -t $REGISTRY/pp-frontend:$IMAGE_TAG -t $REGISTRY/pp-frontend:latest .
          docker push $REGISTRY/pp-frontend
          docker build -f docker/user.Dockerfile -t $REGISTRY/pp-user:$IMAGE_TAG -t $REGISTRY/pp-user:latest .
          docker push $REGISTRY/pp-user

      - name: Update kube config
        run: aws eks update-kubeconfig --name peer-prep --region ap-southeast-1

      - name: Deploy image to Amazon EKS
        run: |
          kubectl apply -f k8s/prod/aws-auth.yaml
          kubectl apply -f k8s/prod/frontend-deployment.yaml
          kubectl apply -f k8s/prod/user-deployment.yaml
          kubectl apply -f k8s/prod/ingress.yaml
